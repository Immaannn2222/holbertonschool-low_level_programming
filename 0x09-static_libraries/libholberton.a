!<arch>
0-isupper.c/    0           0     0     644     225       `
#include "holberton.h"
/**
*_isupper - looks for character type
*@c : parameter designing a character
*Return:1 if lowercase or 0 if uppercase
*/
int _isupper(int c)
{
if (c >= 'A' && c <= 'Z')
return (1);
else
return (0);
}

_putchar.o/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

0-isupper/      0           0     0     644     225       `
#include "holberton.h"
/**
*_isupper - looks for character type
*@c : parameter designing a character
*Return:1 if lowercase or 0 if uppercase
*/
int _isupper(int c)
{
if (c >= 'A' && c <= 'Z')
return (1);
else
return (0);
}

0-memset/       0           0     0     644     268       `
#include "holberton.h"
/**
*_memset - fill n bytes with constant b
*@b : parameter designing a character
*@s: pointer
*@n : a long integer
*Return:s
*/
char *_memset(char *s, char b, unsigned int n)
{
unsigned int i = 0;
while (i < n)
{
s[i] = b;
i++;
}
return (s);
}
0-memset.o/     0           0     0     644     268       `
#include "holberton.h"
/**
*_memset - fill n bytes with constant b
*@b : parameter designing a character
*@s: pointer
*@n : a long integer
*Return:s
*/
char *_memset(char *s, char b, unsigned int n)
{
unsigned int i = 0;
while (i < n)
{
s[i] = b;
i++;
}
return (s);
}
0-isupper.o/    0           0     0     644     225       `
#include "holberton.h"
/**
*_isupper - looks for character type
*@c : parameter designing a character
*Return:1 if lowercase or 0 if uppercase
*/
int _isupper(int c)
{
if (c >= 'A' && c <= 'Z')
return (1);
else
return (0);
}

